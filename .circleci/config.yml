# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: blockstack/subdomain-registrar
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:12

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: "Update npm"
          command: |
            npm install npm@latest
            sudo rm -rf /usr/local/lib/node_modules/npm
            sudo mv node_modules/npm /usr/local/lib/node_modules/npm
            sudo chown -R 500:500 /usr/local/lib/node_modules/npm

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run test
      - run: npm run report-lcov
      - codecov/upload:
          file: coverage.lcov
  build-docker:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build docker image
          command: docker build . -t $IMAGE_NAME:latest
      - run:
          name: save image to workspace
          command: docker save -o image.tar $IMAGE_NAME:latest
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  push-docker-tags:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: load docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: push docker image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=${CIRCLE_TAG}
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:$IMAGE_TAG
workflows:
  version: 2
  test-and-build:
    jobs:
      - build
          filters:
            tags:
              only: /.*/
      - build-docker:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - push-docker-tags:
          requires:
            - build
            - build-docker
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

